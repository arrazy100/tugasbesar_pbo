/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vending_machine;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author afar0308
 */
public class database_admin extends javax.swing.JPanel {

    /**
     * Creates new form database_admin
     * @throws java.sql.SQLException
     */
    public database_admin() throws SQLException {
        initComponents();
        initButton();
        initDatabase();
    }
    
    public Connection connect() {
        // connect to database
        Connection conn = null;
        try {
            // db parameters
            String url = "jdbc:sqlite:databases/stok.db";
            // create a connection to the database
            conn = DriverManager.getConnection(url);
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        return conn;
    }
    
    private void initButton() {
        btn_restok = new ImageIcon(getClass().getResource("images/button_restok.png"));
        btn_restok_entered = new ImageIcon(getClass().getResource("images/button_restok_entered.png"));
    }
    
    private void initDatabase() throws SQLException {
        Connection conn = connect();
        
        Statement stmt = conn.createStatement();
        ResultSet rs = stmt.executeQuery("SELECT * FROM stok");
        jTable1.setModel(buildTableModel(rs));
        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jTable1.setRowSelectionAllowed(false);
        jTable1.setRowHeight(52);
        
        rs = stmt.executeQuery("SELECT kode_barang, nama_barang, MAX(pembelian) "
                                + "FROM STOK WHERE kode_barang LIKE 'D-%'");
        minumanTerlaku.setText(rs.getString("nama_barang"));
        rs = stmt.executeQuery("SELECT kode_barang, nama_barang, MAX(pembelian) "
                                + "FROM STOK WHERE kode_barang LIKE 'S-%'");
        makananTerlaku.setText(rs.getString("nama_barang"));
        
        conn.close();
    }
    
    public DefaultTableModel buildTableModel(ResultSet rs) throws SQLException {
        ResultSetMetaData metaData = rs.getMetaData();

        // names of columns
        Vector<String> columnNames = new Vector<String>();
        int columnCount = metaData.getColumnCount();
        for (int column = 1; column <= columnCount+1; column++) {
            if (column == columnCount+1) {
                columnNames.add("aksi");
                break;
            }
            columnNames.add(metaData.getColumnName(column));
        }

        // data of the table
        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        while (rs.next()) {
            Vector<Object> vector = new Vector<Object>();
            for (int columnIndex = 1; columnIndex <= columnCount+1; columnIndex++) {
                if (columnIndex == columnCount+1) {
                    vector.add(btn_restok);
                    break;
                }
                vector.add(rs.getObject(columnIndex));
            }
            data.add(vector);
        }

        return new DefaultTableModel(data, columnNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
            @Override
            public Class<?> getColumnClass(int column) {
                if (column == getColumnCount()-1) return ImageIcon.class;
                else return Object.class;
            }
        };
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        minumanTerlaku = new javax.swing.JLabel();
        makananTerlaku = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(725, 459));
        setPreferredSize(new java.awt.Dimension(725, 459));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "kode", "nama", "harga", "jumlah_barang", "pembelian", "aksi"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.Long.class, java.lang.Long.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("STOK BARANG");

        jLabel2.setText("Minuman yang paling banyak dibeli:");

        jLabel3.setText("Makanan yang paling banyak dibeli:");

        minumanTerlaku.setText("jLabel4");

        makananTerlaku.setText("jLabel5");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 12, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 701, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(minumanTerlaku))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(makananTerlaku)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(273, 273, 273))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(minumanTerlaku))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(makananTerlaku))
                .addContainerGap(77, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int row = jTable1.rowAtPoint(evt.getPoint());
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String s = model.getValueAt(row, 0).toString();
        restok(s);
        try {
            initDatabase();
        } catch (SQLException ex) {
            Logger.getLogger(database_admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        // TODO add your handling code here:
        int row = jTable1.rowAtPoint(evt.getPoint());
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setValueAt(btn_restok_entered, row, model.getColumnCount()-1);
    }//GEN-LAST:event_jTable1MousePressed

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        // TODO add your handling code here:
        int row = jTable1.rowAtPoint(evt.getPoint());
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setValueAt(btn_restok, row, model.getColumnCount()-1);
    }//GEN-LAST:event_jTable1MouseReleased
    
    public void restok(String s) {
        String sql = "UPDATE stok SET jumlah_barang = jumlah_barang + ? WHERE kode_barang = ?";
        String stok = javax.swing.JOptionPane.showInputDialog("Jumlah barang yang ingin ditambah:");
        
        try (Connection conn = connect(); PreparedStatement pstmt = conn.prepareStatement(sql)) {
            try {
                pstmt.setLong(1, Long.parseLong(stok));
            } catch (NumberFormatException e) {
                javax.swing.JOptionPane.showMessageDialog(null, "Hanya menerima input angka");
                pstmt.setLong(1, 0);
            }
            pstmt.setString(2, s);
            pstmt.executeUpdate();
            conn.close();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel makananTerlaku;
    private javax.swing.JLabel minumanTerlaku;
    // End of variables declaration//GEN-END:variables
    private ImageIcon btn_restok;
    private ImageIcon btn_restok_entered;
}
